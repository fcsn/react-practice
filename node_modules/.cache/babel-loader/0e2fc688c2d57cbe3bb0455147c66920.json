{"ast":null,"code":"import _defineProperty from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _handleActions;\n\nimport { crateAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport { getPhotosByAlbumId } from '../../../src/api/photo';\nvar GET_PHOTO_LOADING = 'photo/GET_PHOTO_LOADING';\nvar GET_PHOTO_SUCCESS = 'photo/GET_PHOTO_SUCCESS';\nvar GET_PHOTO_FAILURE = 'photo/GET_PHOTO_FAILURE';\n\nvar getPhotoLoading = function getPhotoLoading() {\n  return {\n    type: GET_PHOTO_LOADING\n  };\n};\n\nvar getPhotoSuccess = function getPhotoSuccess(photo) {\n  return {\n    type: GET_PHOTO_SUCCESS,\n    payload: photo\n  };\n};\n\nvar getPhotoFailure = function getPhotoFailure() {\n  return {\n    type: GET_PHOTO_FAILURE\n  };\n};\n\nexport var getPhoto = function getPhoto(albumId) {\n  return function (dispatch, getState) {\n    dispatch(getPhotoLoading());\n    return getPhotosByAlbumId(albumId).then(function (photo) {\n      return dispatch(getPhotoSuccess(photo));\n    }).catch(function (err) {\n      return dispatch(getPhotoFailure());\n    });\n  };\n};\nvar initialState = {\n  photo: null,\n  error: false,\n  loading: false\n};\nexport default handleActions((_handleActions = {}, _defineProperty(_handleActions, GET_PHOTO_LOADING, function (state, action) {\n  return _objectSpread({}, state, {\n    loading: true\n  });\n}), _defineProperty(_handleActions, GET_PHOTO_SUCCESS, function (state, action) {\n  return _objectSpread({}, state, {\n    photo: action.payload,\n    loading: false\n  });\n}), _defineProperty(_handleActions, GET_PHOTO_FAILURE, function (state, action) {\n  return _objectSpread({}, state, {\n    loading: false,\n    error: true\n  });\n}), _handleActions), initialState);","map":{"version":3,"sources":["/Users/seonghunshin/Documents/react-practice/src/store/modules/photo.js"],"names":["crateAction","handleActions","produce","getPhotosByAlbumId","GET_PHOTO_LOADING","GET_PHOTO_SUCCESS","GET_PHOTO_FAILURE","getPhotoLoading","type","getPhotoSuccess","photo","payload","getPhotoFailure","getPhoto","albumId","dispatch","getState","then","catch","err","initialState","error","loading","state","action"],"mappings":";;;;;AAAA,SAAQA,WAAR,EAAqBC,aAArB,QAAyC,eAAzC;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,SAAQC,kBAAR,QAAiC,wBAAjC;AAEA,IAAMC,iBAAiB,GAAG,yBAA1B;AACA,IAAMC,iBAAiB,GAAG,yBAA1B;AACA,IAAMC,iBAAiB,GAAG,yBAA1B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAACC,IAAAA,IAAI,EAAEJ;AAAP,GAAP;AAAA,CAAxB;;AACA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAACF,IAAAA,IAAI,EAAEH,iBAAP;AAA0BM,IAAAA,OAAO,EAAED;AAAnC,GAAL;AAAA,CAA7B;;AACA,IAAME,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAACJ,IAAAA,IAAI,EAAEF;AAAP,GAAP;AAAA,CAAxB;;AAEA,OAAO,IAAMO,QAAQ,GAAG,SAAXA,QAAW,CAAAC,OAAO;AAAA,SAC3B,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACpBD,IAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR;AACA,WAAOJ,kBAAkB,CAACW,OAAD,CAAlB,CACNG,IADM,CACD,UAAAP,KAAK;AAAA,aAAIK,QAAQ,CAACN,eAAe,CAACC,KAAD,CAAhB,CAAZ;AAAA,KADJ,EAENQ,KAFM,CAEA,UAAAC,GAAG;AAAA,aAAIJ,QAAQ,CAACH,eAAe,EAAhB,CAAZ;AAAA,KAFH,CAAP;AAGH,GAN0B;AAAA,CAAxB;AASP,IAAMQ,YAAY,GAAG;AACjBV,EAAAA,KAAK,EAAE,IADU;AAEjBW,EAAAA,KAAK,EAAE,KAFU;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,eAAerB,aAAa,uDACvBG,iBADuB,EACH,UAACmB,KAAD,EAAQC,MAAR;AAAA,2BACdD,KADc;AAEjBD,IAAAA,OAAO,EAAE;AAFQ;AAAA,CADG,mCAKvBjB,iBALuB,EAKH,UAACkB,KAAD,EAAQC,MAAR;AAAA,2BACdD,KADc;AAEjBb,IAAAA,KAAK,EAAEc,MAAM,CAACb,OAFG;AAGjBW,IAAAA,OAAO,EAAE;AAHQ;AAAA,CALG,mCAUvBhB,iBAVuB,EAUH,UAACiB,KAAD,EAAQC,MAAR;AAAA,2BACdD,KADc;AAEjBD,IAAAA,OAAO,EAAE,KAFQ;AAGjBD,IAAAA,KAAK,EAAE;AAHU;AAAA,CAVG,oBAezBD,YAfyB,CAA5B","sourcesContent":["import {crateAction, handleActions} from 'redux-actions';\nimport produce from 'immer'\nimport {getPhotosByAlbumId} from '../../../src/api/photo'\n\nconst GET_PHOTO_LOADING = 'photo/GET_PHOTO_LOADING'\nconst GET_PHOTO_SUCCESS = 'photo/GET_PHOTO_SUCCESS'\nconst GET_PHOTO_FAILURE = 'photo/GET_PHOTO_FAILURE'\n\nconst getPhotoLoading = () => ({type: GET_PHOTO_LOADING})\nconst getPhotoSuccess = photo => ({type: GET_PHOTO_SUCCESS, payload: photo})\nconst getPhotoFailure = () => ({type: GET_PHOTO_FAILURE})\n\nexport const getPhoto = albumId => (\n    (dispatch, getState) => {\n        dispatch(getPhotoLoading())\n        return getPhotosByAlbumId(albumId)\n        .then(photo => dispatch(getPhotoSuccess(photo)))\n        .catch(err => dispatch(getPhotoFailure()))\n    }\n)\n\nconst initialState = {\n    photo: null,\n    error: false,\n    loading: false\n}\n\nexport default handleActions({\n    [GET_PHOTO_LOADING]: (state, action) => ({\n        ...state,\n        loading: true\n    }),\n    [GET_PHOTO_SUCCESS]: (state, action) => ({\n        ...state,\n        photo: action.payload,\n        loading: false\n    }),\n    [GET_PHOTO_FAILURE]: (state, action) => ({\n        ...state,\n        loading: false,\n        error: true\n    })\n}, initialState)\n"]},"metadata":{},"sourceType":"module"}