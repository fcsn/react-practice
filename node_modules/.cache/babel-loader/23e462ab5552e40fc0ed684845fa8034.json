{"ast":null,"code":"import _classCallCheck from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/seonghunshin/Documents/react-practice/src/containers/TodoList/TodoListContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as todoActions from '../../../src/store/modules/todo';\nimport TodoList from '../../../src/components/TodoList/TodoList';\n\nvar TodoListContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoListContainer, _React$Component);\n\n  function TodoListContainer() {\n    _classCallCheck(this, TodoListContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TodoListContainer).apply(this, arguments));\n  }\n\n  _createClass(TodoListContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          todoList = _this$props.todoList,\n          TodoActions = _this$props.TodoActions,\n          input = _this$props.input;\n      var list = todoList.map(function (item) {\n        return React.createElement(TodoList, {\n          key: item.id,\n          item: item,\n          TodoActions: TodoActions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, JSON.stringify(this.props), list);\n    }\n  }]);\n\n  return TodoListContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var todo = _ref.todo;\n  return {\n    input: todo.input,\n    todoList: todo.todoList\n  };\n}; // 이런 구조로 하면 나중에 다양한 리덕스 모듈을 적용해야 하는 상황에서 유용합니다.\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    TodoActions: bindActionCreators(todoActions, dispatch) // AnotherActions: bindActionCreators(anotherActions, dispatch)\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListContainer); // export default TodoListContainer;","map":{"version":3,"sources":["/Users/seonghunshin/Documents/react-practice/src/containers/TodoList/TodoListContainer.js"],"names":["React","connect","bindActionCreators","todoActions","TodoList","TodoListContainer","props","todoList","TodoActions","input","list","map","item","id","JSON","stringify","Component","mapStateToProps","todo","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,OAAO,KAAKC,WAAZ,MAA6B,iCAA7B;AAEA,OAAOC,QAAP,MAAqB,2CAArB;;IAEMC,iB;;;;;;;;;;;;;6BACQ;AAAA,wBACiC,KAAKC,KADtC;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,WADX,eACWA,WADX;AAAA,UACwBC,KADxB,eACwBA,KADxB;AAEN,UAAMC,IAAI,GAAGH,QAAQ,CAACI,GAAT,CAAa,UAAAC,IAAI;AAAA,eAAI,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AACU,UAAA,IAAI,EAAED,IADhB;AAEU,UAAA,WAAW,EAAEJ,WAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OAAjB,CAAb;AAGA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKM,IAAI,CAACC,SAAL,CAAe,KAAKT,KAApB,CADL,EAEKI,IAFL,CADJ;AAOH;;;;EAb2BV,KAAK,CAACgB,S;;AAgBtC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAAe;AACnCT,IAAAA,KAAK,EAAES,IAAI,CAACT,KADuB;AAEnCF,IAAAA,QAAQ,EAAEW,IAAI,CAACX;AAFoB,GAAf;AAAA,CAAxB,C,CAKA;;;AACA,IAAMY,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpCZ,IAAAA,WAAW,EAAEN,kBAAkB,CAACC,WAAD,EAAciB,QAAd,CADK,CAEpC;;AAFoC,GAAL;AAAA,CAAnC;;AAIA,eAAenB,OAAO,CAClBgB,eADkB,EAElBE,kBAFkB,CAAP,CAGbd,iBAHa,CAAf,C,CAKA","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport * as todoActions from '../../../src/store/modules/todo'\n\nimport TodoList from '../../../src/components/TodoList/TodoList';\n\nclass TodoListContainer extends React.Component {\n    render () {\n        const {todoList, TodoActions, input} = this.props\n        const list = todoList.map(item => <TodoList key={item.id}\n                                                    item={item}\n                                                    TodoActions={TodoActions}/>)\n        return (\n            <div>\n                {JSON.stringify(this.props)}\n                {list}\n                {/*<TodoList/>*/}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ todo }) => ({\n    input: todo.input,\n    todoList: todo.todoList\n});\n\n// 이런 구조로 하면 나중에 다양한 리덕스 모듈을 적용해야 하는 상황에서 유용합니다.\nconst mapDispatchToProps = dispatch => ({\n    TodoActions: bindActionCreators(todoActions, dispatch),\n    // AnotherActions: bindActionCreators(anotherActions, dispatch)\n});\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodoListContainer);\n\n// export default TodoListContainer;\n"]},"metadata":{},"sourceType":"module"}