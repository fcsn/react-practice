{"ast":null,"code":"import _classCallCheck from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/seonghunshin/Documents/react-practice/src/containers/TodoList/TodoListContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as todoActions from '../../../src/store/modules/todo';\nimport TodoList from '../../../src/components/TodoList/TodoList';\n\nvar TodoListContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoListContainer, _React$Component);\n\n  function TodoListContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoListContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoListContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChange = function (e) {\n      e.preventDefault();\n      var _this$props = _this.props,\n          TodoActions = _this$props.TodoActions,\n          input = _this$props.input;\n      TodoActions.create(input);\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoListContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          todoList = _this$props2.todoList,\n          TodoActions = _this$props2.TodoActions,\n          input = _this$props2.input;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, JSON.stringify(this.props), React.createElement(TodoList, {\n        todoList: todoList,\n        input: input,\n        TodoActions: TodoActions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodoListContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var todo = _ref.todo;\n  return {\n    input: todo.input,\n    todoList: todo.todoList\n  };\n}; // 이런 구조로 하면 나중에 다양한 리덕스 모듈을 적용해야 하는 상황에서 유용합니다.\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    TodoActions: bindActionCreators(todoActions, dispatch) // AnotherActions: bindActionCreators(anotherActions, dispatch)\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListContainer); // export default TodoListContainer;","map":{"version":3,"sources":["/Users/seonghunshin/Documents/react-practice/src/containers/TodoList/TodoListContainer.js"],"names":["React","connect","bindActionCreators","todoActions","TodoList","TodoListContainer","onChange","e","preventDefault","props","TodoActions","input","create","todoList","JSON","stringify","Component","mapStateToProps","todo","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,OAAO,KAAKC,WAAZ,MAA6B,iCAA7B;AAEA,OAAOC,QAAP,MAAqB,2CAArB;;IAEMC,iB;;;;;;;;;;;;;;;;;;UACFC,Q,GAAW,UAAAC,CAAC,EAAI;AACZA,MAAAA,CAAC,CAACC,cAAF;AADY,wBAEiB,MAAKC,KAFtB;AAAA,UAELC,WAFK,eAELA,WAFK;AAAA,UAEQC,KAFR,eAEQA,KAFR;AAGZD,MAAAA,WAAW,CAACE,MAAZ,CAAmBD,KAAnB;AACH,K;;;;;;;6BACS;AAAA,yBACiC,KAAKF,KADtC;AAAA,UACCI,QADD,gBACCA,QADD;AAAA,UACWH,WADX,gBACWA,WADX;AAAA,UACwBC,KADxB,gBACwBA,KADxB;AAEN,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKG,IAAI,CAACC,SAAL,CAAe,KAAKN,KAApB,CADL,EAEI,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEI,QAApB;AACU,QAAA,KAAK,EAAEF,KADjB;AAEU,QAAA,WAAW,EAAED,WAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AASH;;;;EAjB2BV,KAAK,CAACgB,S;;AAoBtC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAAe;AACnCP,IAAAA,KAAK,EAAEO,IAAI,CAACP,KADuB;AAEnCE,IAAAA,QAAQ,EAAEK,IAAI,CAACL;AAFoB,GAAf;AAAA,CAAxB,C,CAKA;;;AACA,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpCV,IAAAA,WAAW,EAAER,kBAAkB,CAACC,WAAD,EAAciB,QAAd,CADK,CAEpC;;AAFoC,GAAL;AAAA,CAAnC;;AAIA,eAAenB,OAAO,CAClBgB,eADkB,EAElBE,kBAFkB,CAAP,CAGbd,iBAHa,CAAf,C,CAKA","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport * as todoActions from '../../../src/store/modules/todo'\n\nimport TodoList from '../../../src/components/TodoList/TodoList';\n\nclass TodoListContainer extends React.Component {\n    onChange = e => {\n        e.preventDefault()\n        const {TodoActions, input} = this.props\n        TodoActions.create(input)\n    }\n    render () {\n        const {todoList, TodoActions, input} = this.props\n        return (\n            <div>\n                {JSON.stringify(this.props)}\n                <TodoList todoList={todoList}\n                          input={input}\n                          TodoActions={TodoActions}/>\n                {/*<TodoList/>*/}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ todo }) => ({\n    input: todo.input,\n    todoList: todo.todoList\n});\n\n// 이런 구조로 하면 나중에 다양한 리덕스 모듈을 적용해야 하는 상황에서 유용합니다.\nconst mapDispatchToProps = dispatch => ({\n    TodoActions: bindActionCreators(todoActions, dispatch),\n    // AnotherActions: bindActionCreators(anotherActions, dispatch)\n});\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodoListContainer);\n\n// export default TodoListContainer;\n"]},"metadata":{},"sourceType":"module"}