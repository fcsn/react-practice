{"ast":null,"code":"import _defineProperty from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport { getUserAPIByUserId } from '../../../src/api/user';\nvar GET_USER_LOADING = 'user/GET_USER_LOADING';\nvar GET_USER_SUCCESS = 'user/GET_USER_SUCCESS';\nvar GET_USER_FAILURE = 'user/GET_USER_LOADING';\n\nvar getUserLoading = function getUserLoading() {\n  return {\n    type: GET_USER_LOADING\n  };\n};\n\nvar getUserSuccess = function getUserSuccess(user) {\n  return {\n    type: GET_USER_SUCCESS,\n    payload: user\n  };\n};\n\nvar getUserFailure = function getUserFailure() {\n  return {\n    type: GET_USER_FAILURE\n  };\n};\n\nexport var getUser = function getUser(userId) {\n  return function (dispatch, getState) {\n    dispatch(getUserLoading());\n    return getUserAPIByUserId(userId).then(function (user) {\n      dispatch(getUserSuccess(user));\n      return user;\n    }).catch(function (err) {\n      console.log(err);\n      dispatch(getUserFailure());\n    });\n  };\n};\nvar initialState = {\n  user: null,\n  error: false\n};\nexport default handleActions(_defineProperty({}, GET_USER_SUCCESS, function (state, action) {\n  return _objectSpread({}, state, {\n    user: action.payload\n  });\n}), initialState);","map":{"version":3,"sources":["/Users/seonghunshin/Documents/react-practice/src/store/modules/user.js"],"names":["createAction","handleActions","produce","getUserAPIByUserId","GET_USER_LOADING","GET_USER_SUCCESS","GET_USER_FAILURE","getUserLoading","type","getUserSuccess","user","payload","getUserFailure","getUser","userId","dispatch","getState","then","catch","err","console","log","initialState","error","state","action"],"mappings":";;AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,SAAQC,kBAAR,QAAiC,uBAAjC;AAEA,IAAMC,gBAAgB,GAAG,uBAAzB;AACA,IAAMC,gBAAgB,GAAG,uBAAzB;AACA,IAAMC,gBAAgB,GAAG,uBAAzB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAO;AAACC,IAAAA,IAAI,EAAEJ;AAAP,GAAP;AAAA,CAAvB;;AACA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD;AAAA,SAAW;AAACF,IAAAA,IAAI,EAAEH,gBAAP;AAAyBM,IAAAA,OAAO,EAAED;AAAlC,GAAX;AAAA,CAAvB;;AACA,IAAME,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAO;AAACJ,IAAAA,IAAI,EAAEF;AAAP,GAAP;AAAA,CAAvB;;AAEA,OAAO,IAAMO,OAAO,GAAG,SAAVA,OAAU,CAAAC,MAAM;AAAA,SACzB,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACpBD,IAAAA,QAAQ,CAACR,cAAc,EAAf,CAAR;AACA,WAAOJ,kBAAkB,CAACW,MAAD,CAAlB,CACNG,IADM,CACD,UAAAP,IAAI,EAAI;AACVK,MAAAA,QAAQ,CAACN,cAAc,CAACC,IAAD,CAAf,CAAR;AACA,aAAOA,IAAP;AACH,KAJM,EAKNQ,KALM,CAKA,UAAAC,GAAG,EAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,MAAAA,QAAQ,CAACH,cAAc,EAAf,CAAR;AACH,KARM,CAAP;AASP,GAZ4B;AAAA,CAAtB;AAcP,IAAMU,YAAY,GAAG;AACbZ,EAAAA,IAAI,EAAE,IADO;AAEba,EAAAA,KAAK,EAAE;AAFM,CAArB;AAKA,eAAetB,aAAa,qBACvBI,gBADuB,EACJ,UAACmB,KAAD,EAAQC,MAAR;AAAA,2BAIbD,KAJa;AAKhBd,IAAAA,IAAI,EAAEe,MAAM,CAACd;AALG;AAAA,CADI,GAYzBW,YAZyB,CAA5B","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\nimport produce from 'immer'\nimport {getUserAPIByUserId} from '../../../src/api/user'\n\nconst GET_USER_LOADING = 'user/GET_USER_LOADING';\nconst GET_USER_SUCCESS = 'user/GET_USER_SUCCESS';\nconst GET_USER_FAILURE = 'user/GET_USER_LOADING';\n\nconst getUserLoading = () => ({type: GET_USER_LOADING})\nconst getUserSuccess = (user) => ({type: GET_USER_SUCCESS, payload: user})\nconst getUserFailure = () => ({type: GET_USER_FAILURE})\n\nexport const getUser = userId => (\n    (dispatch, getState) => {\n        dispatch(getUserLoading())\n        return getUserAPIByUserId(userId)\n        .then(user => {\n            dispatch(getUserSuccess(user))\n            return user\n        })\n        .catch(err => {\n            console.log(err)\n            dispatch(getUserFailure())\n        })\n})\n\nconst initialState = {\n        user: null,\n        error: false\n}\n\nexport default handleActions({\n    [GET_USER_SUCCESS]: (state, action) => ({\n        // produce((state, draft) => {\n        //     draft.user = action.payload.data\n        // })\n        ...state,\n        user: action.payload\n    }),\n    // [GET_USER_FAILURE]: (state, action) => ({\n    //     ...state,\n    //     error: true\n    // })\n}, initialState)\n"]},"metadata":{},"sourceType":"module"}