{"ast":null,"code":"import _classCallCheck from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/seonghunshin/Documents/react-practice/src/containers/TodoList/TodoListContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as todoActions from '../../../src/store/modules/todo';\nimport * as postActions from '../../../src/store/modules/post';\nimport * as userActions from '../../../src/store/modules/user';\nimport * as commentActions from '../../../src/store/modules/comment';\nimport TodoList from '../../../src/components/TodoList/TodoList';\n\nvar TodoListContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoListContainer, _React$Component);\n\n  function TodoListContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoListContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoListContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: null,\n      user: null,\n      comment: null\n    };\n\n    _this.handleChange = function (e) {\n      var TodoActions = _this.props.TodoActions;\n      if (e.target.value !== 0) TodoActions.changeInput(e.target.value);\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var _this$props = _this.props,\n          TodoActions = _this$props.TodoActions,\n          input = _this$props.input;\n      TodoActions.create(input);\n      TodoActions.changeInput('');\n    };\n\n    _this.handleRemove = function (id) {\n      var TodoActions = _this.props.TodoActions;\n      TodoActions.remove(id);\n    };\n\n    _this.handleToggle = function (id) {\n      var TodoActions = _this.props.TodoActions;\n      TodoActions.toggle(id);\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoListContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          PostActions = _this$props2.PostActions,\n          UserActions = _this$props2.UserActions,\n          CommentActions = _this$props2.CommentActions;\n      var post = PostActions.getPost(1);\n      var user = UserActions.getUser(1);\n      var comment = CommentActions.getComment(1);\n      console.log(\"comment + \".concat(comment));\n      this.setState({\n        data: post,\n        user: user,\n        comment: comment\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          todoList = _this$props3.todoList,\n          TodoActions = _this$props3.TodoActions,\n          input = _this$props3.input,\n          post = _this$props3.post,\n          loading = _this$props3.loading,\n          error = _this$props3.error,\n          user = _this$props3.user,\n          comment = _this$props3.comment;\n      console.log(this.props.user.user);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, JSON.stringify(this.state), loading && React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"\\uC2DC\\uBC29 loading\\uC911\"), error ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"\\uC5D0\\uB7EC\\uB77C\\uB2A5!\") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, post.title), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, post.body), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, String(user.user))), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"\\uB4F1\\uB85D\")), React.createElement(TodoList, {\n        todoList: todoList,\n        input: input,\n        onChange: this.handleChange,\n        onSubmit: this.handleSubmit,\n        onRemove: this.handleRemove,\n        onToggle: this.handleToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodoListContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var todo = _ref.todo,\n      post = _ref.post,\n      user = _ref.user,\n      comment = _ref.comment;\n  return {\n    input: todo.input,\n    todoList: todo.todoList,\n    post: post.data,\n    loading: post.pending,\n    error: post.error,\n    user: user,\n    comment: comment\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    TodoActions: bindActionCreators(todoActions, dispatch),\n    PostActions: bindActionCreators(postActions, dispatch),\n    UserActions: bindActionCreators(userActions, dispatch),\n    CommentActions: bindActionCreators(commentActions, dispatch) // AnotherActions: bindActionCreators(anotherActions, dispatch)\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListContainer); // export default TodoListContainer;","map":{"version":3,"sources":["/Users/seonghunshin/Documents/react-practice/src/containers/TodoList/TodoListContainer.js"],"names":["React","connect","bindActionCreators","todoActions","postActions","userActions","commentActions","TodoList","TodoListContainer","state","data","user","comment","handleChange","e","TodoActions","props","target","value","changeInput","handleSubmit","preventDefault","input","create","handleRemove","id","remove","handleToggle","toggle","PostActions","UserActions","CommentActions","post","getPost","getUser","getComment","console","log","setState","todoList","loading","error","JSON","stringify","title","body","String","Component","mapStateToProps","todo","pending","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport * as todoActions from '../../../src/store/modules/todo'\nimport * as postActions from '../../../src/store/modules/post'\nimport * as userActions from '../../../src/store/modules/user'\nimport * as commentActions from '../../../src/store/modules/comment'\n\nimport TodoList from '../../../src/components/TodoList/TodoList';\n\nclass TodoListContainer extends React.Component {\n    state = {\n        data: null,\n        user: null,\n        comment: null\n    }\n\n    handleChange = e => {\n        const {TodoActions} = this.props\n        if (e.target.value !== 0)\n        TodoActions.changeInput(e.target.value)\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const {TodoActions, input} = this.props\n        TodoActions.create(input)\n        TodoActions.changeInput('')\n    }\n\n    handleRemove = id => {\n        const {TodoActions} = this.props\n        TodoActions.remove(id)\n    }\n\n    handleToggle = id => {\n        const {TodoActions} = this.props\n        TodoActions.toggle(id)\n    }\n\n    componentDidMount () {\n        const {PostActions, UserActions, CommentActions} = this.props\n        const post = PostActions.getPost(1)\n        const user = UserActions.getUser(1)\n        const comment = CommentActions.getComment(1)\n        console.log(`comment + ${comment}`)\n        this.setState({data: post, user: user, comment: comment})\n    }\n\n    render () {\n        const {todoList, TodoActions, input, post, loading, error, user, comment} = this.props\n        console.log(this.props.user.user)\n        return (\n            <div>\n                {/*{JSON.stringify(this.props.user.user)}*/}\n                {/*comment: {JSON.stringify(this.props.comment)}*/}\n                {JSON.stringify(this.state)}\n                {loading && <h1>시방 loading중</h1>}\n                {error ?\n                    <h1>에러라능!</h1>\n                    : <div>\n                      <h1>{post.title}</h1>\n                      <div>{post.body}</div>\n                      <h2>{String(user.user)}</h2>\n                      </div>\n                }\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\"\n                           value={input}\n                           onChange={this.handleChange}/>\n                    <button>등록</button>\n                </form>\n                <TodoList todoList={todoList}\n                          input={input}\n                          onChange={this.handleChange}\n                          onSubmit={this.handleSubmit}\n                          onRemove={this.handleRemove}\n                          onToggle={this.handleToggle}/>\n                {/*<TodoList/>*/}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ todo, post, user, comment }) => ({\n    input: todo.input,\n    todoList: todo.todoList,\n    post: post.data,\n    loading: post.pending,\n    error: post.error,\n    user: user,\n    comment: comment\n});\n\nconst mapDispatchToProps = dispatch => ({\n    TodoActions: bindActionCreators(todoActions, dispatch),\n    PostActions: bindActionCreators(postActions, dispatch),\n    UserActions: bindActionCreators(userActions, dispatch),\n    CommentActions: bindActionCreators(commentActions, dispatch)\n    // AnotherActions: bindActionCreators(anotherActions, dispatch)\n});\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodoListContainer);\n\n// export default TodoListContainer;\n"]},"metadata":{},"sourceType":"module"}