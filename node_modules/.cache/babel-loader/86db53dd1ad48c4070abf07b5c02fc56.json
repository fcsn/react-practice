{"ast":null,"code":"import _defineProperty from \"/Users/seonghunshin/Documents/react-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _handleActions;\n\nimport { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nvar CHANGE_INPUT = 'todo/CHANGE_INPUT';\nvar CREATE = 'todo/CREATE';\nvar TOGGLE = 'todo/TOGGLE';\nvar REMOVE = 'todo/REMOVE';\nvar id = 3; // createAction 으로 액션 생성함수 정의\n\nexport var changeInput = createAction(CHANGE_INPUT, function (text) {\n  return text;\n});\nexport var create = createAction(CREATE, function (text) {\n  return {\n    text: text,\n    id: id++\n  };\n});\nexport var toggle = createAction(TOGGLE, function (id) {\n  return id;\n});\nexport var remove = createAction(REMOVE, function (id) {\n  return id;\n});\nvar initialState = {\n  input: '',\n  todoList: [{\n    id: 0,\n    content: '와이와이',\n    isCompleted: false\n  }, {\n    id: 1,\n    content: '허허',\n    isCompleted: false\n  }, {\n    id: 2,\n    content: '훔킈훔킈',\n    isCompleted: false\n  }]\n};\nexport default handleActions((_handleActions = {}, _defineProperty(_handleActions, CHANGE_INPUT, function (state, action) {\n  return produce(state, function (draft) {\n    draft.input = action.payload;\n  });\n}), _defineProperty(_handleActions, CREATE, function (state, action) {\n  return produce(state, function (draft) {\n    var item = {\n      // payload가 하나면 action.payload로 바로 불러오지만 payload가 두 개 이상이면 객체로 들어가서 action.payload.first 이렇게 불러와야 합니다.\n      content: action.payload.text,\n      id: action.payload.id,\n      isCompleted: false\n    };\n\n    if (action.payload.text.length !== 0) {\n      draft.todoList.push(item);\n    } else {\n      alert('씨발아');\n    }\n  });\n}), _defineProperty(_handleActions, TOGGLE, function (state, action) {\n  return produce(state, function (draft) {\n    var item = draft.todoList.find(function (item) {\n      return item.id === action.payload;\n    });\n    item.isCompleted = !item.isCompleted;\n  });\n}), _defineProperty(_handleActions, REMOVE, function (state, action) {\n  return produce(state, function (draft) {\n    draft.todoList.splice(draft.todoList.findIndex(function (item) {\n      return item.id === action.payload;\n    }), 1);\n  });\n}), _handleActions), initialState);","map":{"version":3,"sources":["/Users/seonghunshin/Documents/react-practice/src/store/modules/todo.js"],"names":["createAction","handleActions","produce","CHANGE_INPUT","CREATE","TOGGLE","REMOVE","id","changeInput","text","create","toggle","remove","initialState","input","todoList","content","isCompleted","state","action","draft","payload","item","length","push","alert","find","splice","findIndex"],"mappings":"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","sourcesContent":["import {createAction, handleActions} from 'redux-actions'\nimport produce from 'immer'\n\nconst CHANGE_INPUT = 'todo/CHANGE_INPUT'\nconst CREATE = 'todo/CREATE'\nconst TOGGLE = 'todo/TOGGLE'\nconst REMOVE = 'todo/REMOVE'\n\nlet id = 3;\n// createAction 으로 액션 생성함수 정의\nexport const changeInput = createAction(CHANGE_INPUT, text => text);\nexport const create = createAction(CREATE, text => ({ text, id: id++ }));\nexport const toggle = createAction(TOGGLE, id => id);\nexport const remove = createAction(REMOVE, id => id);\n\nconst initialState = {\n    input: '',\n    todoList: [\n        {\n            id: 0,\n            content: '와이와이',\n            isCompleted: false\n        }, {\n            id: 1,\n            content: '허허',\n            isCompleted: false\n        }, {\n            id: 2,\n            content: '훔킈훔킈',\n            isCompleted: false\n        }\n    ]\n}\n\nexport default handleActions({\n    [CHANGE_INPUT]: (state, action) =>\n        produce(state, draft => {draft.input = action.payload})\n    ,\n    [CREATE]: (state, action) =>\n        produce(state, draft => {\n            const item = {\n                // payload가 하나면 action.payload로 바로 불러오지만 payload가 두 개 이상이면 객체로 들어가서 action.payload.first 이렇게 불러와야 합니다.\n                content: action.payload.text,\n                id: action.payload.id,\n                isCompleted: false\n            }\n            if (action.payload.text.length !== 0) {\n                draft.todoList.push(item)\n            } else {\n                alert('씨발아')\n            }\n        })\n    ,\n    [TOGGLE]: (state, action) =>\n        produce(state, draft => {\n            const item = draft.todoList.find(item => item.id === action.payload)\n            item.isCompleted = !item.isCompleted\n        })\n    ,\n    [REMOVE]: (state, action) =>\n        produce(state, draft => {\n            draft.todoList.splice(draft.todoList.findIndex(item => item.id === action.payload), 1)\n        })\n}, initialState)\n"]},"metadata":{},"sourceType":"module"}