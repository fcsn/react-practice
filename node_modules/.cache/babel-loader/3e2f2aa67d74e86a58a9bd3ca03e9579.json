{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport modules from './modules';\nimport { createLogger } from 'redux-logger';\nimport ReduxThunk from 'redux-thunk';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nvar configure = function configure() {\n  var devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\n  var logger = createLogger();\n  var customizedMiddleware = promiseMiddleware({\n    promiseTypeSuffixes: ['LOADING', '']\n  });\n  var store = createStore(modules, applyMiddleware(logger, ReduxThunk));\n  return store;\n};\n\nexport default configure;","map":{"version":3,"sources":["/Users/seonghunshin/Documents/react-practice/src/store/configure.js"],"names":["createStore","applyMiddleware","modules","createLogger","ReduxThunk","promiseMiddleware","configure","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","logger","customizedMiddleware","promiseTypeSuffixes","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,YAAR,QAA2B,cAA3B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,MAAMC,QAAQ,GAAGC,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAAxD;;AACA,MAAMC,MAAM,GAAGP,YAAY,EAA3B;AACA,MAAMQ,oBAAoB,GAAGN,iBAAiB,CAAC;AAACO,IAAAA,mBAAmB,EAAE,CAAC,SAAD,EAAY,EAAZ;AAAtB,GAAD,CAA9C;AACA,MAAMC,KAAK,GAAGb,WAAW,CAACE,OAAD,EAAUD,eAAe,CAACS,MAAD,EAASN,UAAT,CAAzB,CAAzB;AACA,SAAOS,KAAP;AACH,CAND;;AAQA,eAAeP,SAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\nimport modules from './modules';\nimport {createLogger} from 'redux-logger';\nimport ReduxThunk from 'redux-thunk';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nconst configure = () => {\n    const devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    const logger = createLogger()\n    const customizedMiddleware = promiseMiddleware({promiseTypeSuffixes: ['LOADING', '']})\n    const store = createStore(modules, applyMiddleware(logger, ReduxThunk))\n    return store\n}\n\nexport default configure;\n"]},"metadata":{},"sourceType":"module"}