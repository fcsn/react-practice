{"map":"{\"version\":3,\"sources\":[\"/Users/seonghunshin/Documents/react-practice/src/store/modules/todo.js\",\"/Users/seonghunshin/Documents/react-practice/src/components/TodoList/TodoList.js\",\"/Users/seonghunshin/Documents/react-practice/src/containers/TodoList/TodoListContainer.js\",\"/Users/seonghunshin/Documents/react-practice/src/components/App.js\",\"/Users/seonghunshin/Documents/react-practice/src/Root.js\",\"/Users/seonghunshin/Documents/react-practice/src/serviceWorker.js\",\"/Users/seonghunshin/Documents/react-practice/src/index.js\"],\"names\":[\"id\",\"CHANGE_INPUT\",\"createAction\",\"text\",\"CREATE\",\"TOGGLE\",\"REMOVE\",\"todo\",\"handleActions\",\"_handleActions\",\"Object\",\"defineProperty\",\"state\",\"action\",\"produce\",\"draft\",\"input\",\"payload\",\"item\",\"content\",\"isCompleted\",\"todoList\",\"push\",\"find\",\"splice\",\"findIndex\",\"TodoList\",\"react_default\",\"a\",\"createElement\",\"React\",\"Component\",\"TodoListContainer\",\"components_TodoList_TodoList\",\"connect\",\"_ref\",\"dispatch\",\"WaitingActions\",\"bindActionCreators\",\"todoActions\",\"App\",\"className\",\"TodoList_TodoListContainer\",\"Root\",\"components_App\",\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"config\",\"navigator\",\"serviceWorker\",\"register\",\"then\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"controller\",\"console\",\"log\",\"onUpdate\",\"onSuccess\",\"catch\",\"error\",\"ReactDOM\",\"render\",\"src_Root\",\"document\",\"getElementById\",\"URL\",\"process\",\"href\",\"origin\",\"addEventListener\",\"concat\",\"fetch\",\"response\",\"contentType\",\"headers\",\"get\",\"status\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\"],\"mappings\":\"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\",\"sourcesContent\":[\"import {createAction, handleActions} from 'redux-actions'\\nimport produce from 'immer'\\n\\nlet id = 3;\\n\\nconst CHANGE_INPUT = createAction('todo/CHANGE_INPUT', text => text);\\nconst CREATE = createAction('todo/CREATE', text => ({text, id: id++}));\\nconst TOGGLE = createAction('todo/TOGGLE', id => id);\\nconst REMOVE = createAction('todo/REMOVE', id => id);\\n\\nconst initialState = {\\n    input: '',\\n    todoList: [\\n        {\\n            id: 0,\\n            content: '',\\n            isCompleted: false\\n        }, {\\n            id: 0,\\n            content: '',\\n            isCompleted: false\\n        }, {\\n            id: 0,\\n            content: '',\\n            isCompleted: false\\n        }\\n    ]\\n}\\n\\nexport default handleActions({\\n    [CHANGE_INPUT]: (state, action) => {\\n        produce(state, draft => draft.input = action.payload)\\n    },\\n    [CREATE]: (state, action) => {\\n        produce(state, draft => {\\n            const item = {\\n                // payload가 하나면 action.payload로 바로 불러오지만 payload가 두 개 이상이면 객체로 들어가서 action.payload.first 이렇게 불러와야 합니다.\\n                content: action.payload.text,\\n                id: action.payload.id,\\n                isCompleted: false\\n            }\\n            draft.todoList.push(item)\\n        })\\n    },\\n    [TOGGLE]: (state, action) => {\\n        produce(state, draft => {\\n            const item = draft.todoList.find(item => item.id === action.payload)\\n            item.isCompleted = !item.isCompleted\\n        })\\n    },\\n    [REMOVE]: (state, action) => {\\n        produce(state, draft => {\\n            draft.todoList.splice(draft.todoList.findIndex(item => item.id === action.payload), 1)\\n        })\\n    },\\n    initialState\\n})\",\"import React from 'react';\\nimport './TodoList.css';\\n\\nclass TodoList extends React.Component {\\n    render () {\\n        return (\\n            <div>\\n                TodoList\\n            </div>\\n        )\\n    }\\n}\\n\\nexport default TodoList;\",\"import React from 'react';\\nimport {connect} from 'react-redux'\\nimport {bindActionCreators} from 'redux'\\nimport * as todoActions from '../../../src/store/modules/todo'\\n\\nimport TodoList from '../../../src/components/TodoList/TodoList';\\n\\nclass TodoListContainer extends React.Component {\\n    render () {\\n        return (\\n            <div>\\n                <TodoList/>\\n            </div>\\n        )\\n    }\\n}\\n\\nconst mapStateToProps = ({ todo }) => ({\\n    input: todo.input,\\n    todoList: todo.todoList,\\n});\\n\\n// 이런 구조로 하면 나중에 다양한 리덕스 모듈을 적용해야 하는 상황에서 유용합니다.\\nconst mapDispatchToProps = dispatch => ({\\n    WaitingActions: bindActionCreators(todoActions, dispatch),\\n    // AnotherActions: bindActionCreators(anotherActions, dispatch)\\n});\\nexport default connect(\\n    mapStateToProps,\\n    mapDispatchToProps\\n)(TodoListContainer);\\n\\n// export default TodoListContainer;\",\"import React from 'react';\\nimport TodoListContainer from '../../src/containers/TodoList/TodoListContainer'\\n\\nclass App extends React.Component {\\n    render () {\\n        return (\\n            <div className=\\\"App\\\">\\n                <TodoListContainer/>\\n            </div>\\n        )\\n    }\\n}\\n\\nexport default App;\",\"import React from 'react';\\nimport App from './components/App';\\n// import {Provider} from 'react-redux';\\n\\nclass Root extends React.Component {\\n    render () {\\n        return (\\n                <App/>\\n        )\\n    }\\n}\\n\\nexport default Root;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n    window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n        /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n        // The URL constructor is available in all browsers that support SW.\\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n        if (publicUrl.origin !== window.location.origin) {\\n            // Our service worker won't work if PUBLIC_URL is on a different origin\\n            // from what our page is served on. This might happen if a CDN is used to\\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n            return;\\n        }\\n\\n        window.addEventListener('load', () => {\\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n            if (isLocalhost) {\\n                // This is running on localhost. Let's check if a service worker still exists or not.\\n                checkValidServiceWorker(swUrl, config);\\n\\n                // Add some additional logging to localhost, pointing developers to the\\n                // service worker/PWA documentation.\\n                navigator.serviceWorker.ready.then(() => {\\n                    console.log(\\n                        'This web app is being served cache-first by a service ' +\\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n                    );\\n                });\\n            } else {\\n                // Is not localhost. Just register service worker\\n                registerValidSW(swUrl, config);\\n            }\\n        });\\n    }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n    navigator.serviceWorker\\n        .register(swUrl)\\n        .then(registration => {\\n            registration.onupdatefound = () => {\\n                const installingWorker = registration.installing;\\n                if (installingWorker == null) {\\n                    return;\\n                }\\n                installingWorker.onstatechange = () => {\\n                    if (installingWorker.state === 'installed') {\\n                        if (navigator.serviceWorker.controller) {\\n                            // At this point, the updated precached content has been fetched,\\n                            // but the previous service worker will still serve the older\\n                            // content until all client tabs are closed.\\n                            console.log(\\n                                'New content is available and will be used when all ' +\\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n                            );\\n\\n                            // Execute callback\\n                            if (config && config.onUpdate) {\\n                                config.onUpdate(registration);\\n                            }\\n                        } else {\\n                            // At this point, everything has been precached.\\n                            // It's the perfect time to display a\\n                            // \\\"Content is cached for offline use.\\\" message.\\n                            console.log('Content is cached for offline use.');\\n\\n                            // Execute callback\\n                            if (config && config.onSuccess) {\\n                                config.onSuccess(registration);\\n                            }\\n                        }\\n                    }\\n                };\\n            };\\n        })\\n        .catch(error => {\\n            console.error('Error during service worker registration:', error);\\n        });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n    // Check if the service worker can be found. If it can't reload the page.\\n    fetch(swUrl)\\n        .then(response => {\\n            // Ensure service worker exists, and that we really are getting a JS file.\\n            const contentType = response.headers.get('content-type');\\n            if (\\n                response.status === 404 ||\\n                (contentType != null && contentType.indexOf('javascript') === -1)\\n            ) {\\n                // No service worker found. Probably a different app. Reload the page.\\n                navigator.serviceWorker.ready.then(registration => {\\n                    registration.unregister().then(() => {\\n                        window.location.reload();\\n                    });\\n                });\\n            } else {\\n                // Service worker found. Proceed as normal.\\n                registerValidSW(swUrl, config);\\n            }\\n        })\\n        .catch(() => {\\n            console.log(\\n                'No internet connection found. App is running in offline mode.'\\n            );\\n        });\\n}\\n\\nexport function unregister() {\\n    if ('serviceWorker' in navigator) {\\n        navigator.serviceWorker.ready.then(registration => {\\n            registration.unregister();\\n        });\\n    }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport Root from './Root';\\nimport * as serviceWorker from './serviceWorker';\\nimport 'bootstrap/dist/css/bootstrap.min.css';\\n\\nReactDOM.render(<Root/>, document.getElementById('root'));\\n\\nserviceWorker.register();\\n//쓰지 않으려면 serviceWorker.unregister();\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{20:function(t,n,e){t.exports=e(35)},31:function(t,n,e){},35:function(t,n,e){\"use strict\";e.r(n);var o={};e.r(o),e.d(o,\"default\",function(){return k});var i,a=e(0),c=e.n(a),r=e(16),u=e.n(r),l=e(3),s=e(4),d=e(6),f=e(5),p=e(7),b=e(19),O=e(12),j=e(10),h=e(38),v=e(37),w=e(11),m=3,g=Object(h.a)(\"todo/CHANGE_INPUT\",function(t){return t}),y=Object(h.a)(\"todo/CREATE\",function(t){return{text:t,id:m++}}),E=Object(h.a)(\"todo/TOGGLE\",function(t){return t}),C=Object(h.a)(\"todo/REMOVE\",function(t){return t}),k=Object(v.a)((i={},Object(j.a)(i,g,function(t,n){Object(w.a)(t,function(t){return t.input=n.payload})}),Object(j.a)(i,y,function(t,n){Object(w.a)(t,function(t){var e={content:n.payload.text,id:n.payload.id,isCompleted:!1};t.todoList.push(e)})}),Object(j.a)(i,E,function(t,n){Object(w.a)(t,function(t){var e=t.todoList.find(function(t){return t.id===n.payload});e.isCompleted=!e.isCompleted})}),Object(j.a)(i,C,function(t,n){Object(w.a)(t,function(t){t.todoList.splice(t.todoList.findIndex(function(t){return t.id===n.payload}),1)})}),Object(j.a)(i,\"initialState\",{input:\"\",todoList:[{id:0,content:\"\",isCompleted:!1},{id:0,content:\"\",isCompleted:!1},{id:0,content:\"\",isCompleted:!1}]}),i)),L=(e(31),function(t){function n(){return Object(l.a)(this,n),Object(d.a)(this,Object(f.a)(n).apply(this,arguments))}return Object(p.a)(n,t),Object(s.a)(n,[{key:\"render\",value:function(){return c.a.createElement(\"div\",null,\"TodoList\")}}]),n}(c.a.Component)),A=function(t){function n(){return Object(l.a)(this,n),Object(d.a)(this,Object(f.a)(n).apply(this,arguments))}return Object(p.a)(n,t),Object(s.a)(n,[{key:\"render\",value:function(){return c.a.createElement(\"div\",null,c.a.createElement(L,null))}}]),n}(c.a.Component),W=Object(b.a)(function(t){var n=t.todo;return{input:n.input,todoList:n.todoList}},function(t){return{WaitingActions:Object(O.a)(o,t)}})(A),T=function(t){function n(){return Object(l.a)(this,n),Object(d.a)(this,Object(f.a)(n).apply(this,arguments))}return Object(p.a)(n,t),Object(s.a)(n,[{key:\"render\",value:function(){return c.a.createElement(\"div\",{className:\"App\"},c.a.createElement(W,null))}}]),n}(c.a.Component),x=function(t){function n(){return Object(l.a)(this,n),Object(d.a)(this,Object(f.a)(n).apply(this,arguments))}return Object(p.a)(n,t),Object(s.a)(n,[{key:\"render\",value:function(){return c.a.createElement(T,null)}}]),n}(c.a.Component),N=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function R(t,n){navigator.serviceWorker.register(t).then(function(t){t.onupdatefound=function(){var e=t.installing;null!=e&&(e.onstatechange=function(){\"installed\"===e.state&&(navigator.serviceWorker.controller?(console.log(\"New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA.\"),n&&n.onUpdate&&n.onUpdate(t)):(console.log(\"Content is cached for offline use.\"),n&&n.onSuccess&&n.onSuccess(t)))})}}).catch(function(t){console.error(\"Error during service worker registration:\",t)})}e(33);u.a.render(c.a.createElement(x,null),document.getElementById(\"root\")),function(t){if(\"serviceWorker\"in navigator){if(new URL(\"\",window.location.href).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var n=\"\".concat(\"\",\"/service-worker.js\");N?(function(t,n){fetch(t).then(function(e){var o=e.headers.get(\"content-type\");404===e.status||null!=o&&-1===o.indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(t){t.unregister().then(function(){window.location.reload()})}):R(t,n)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(n,t),navigator.serviceWorker.ready.then(function(){console.log(\"This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA\")})):R(n,t)})}}()}},[[20,2,1]]]);","extractedComments":[]}